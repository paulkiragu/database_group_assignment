CREATE DATABASE bookstore_db;
USE bookstore_db;
CREATE TABLE cust_order (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date DATE NOT NULL,
    order_status_id INT NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY (order_status_id) REFERENCES order_status(order_status_id)
);

INSERT INTO cust_order (customer_id, order_date, order_status_id)
VALUES 
    (1, '2025-04-10', 1),
    (2, '2025-04-11', 2),
    (3, '2025-04-12', 3);
    
    CREATE TABLE order_line (
    order_line_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    book_id INT NOT NULL,
    quantity INT NOT NULL,
    price_per_unit DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES cust_order(order_id),
    FOREIGN KEY (book_id) REFERENCES book(book_id)
);

INSERT INTO order_line (order_id, book_id, quantity, price_per_unit)
VALUES 
    (1, 101, 2, 15.99),
    (1, 102, 1, 22.50),
    (2, 103, 3, 8.75);
    
    CREATE TABLE shipping_method (
    shipping_method_id INT AUTO_INCREMENT PRIMARY KEY,
    method_name VARCHAR(50) NOT NULL,
    cost DECIMAL(10, 2) NOT NULL
);

INSERT INTO shipping_method (method_name, cost)
VALUES 
    ('Standard', 5.00),
    ('Express', 10.00),
    ('International', 15.00);
    
    CREATE TABLE order_history (
    history_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    status_change_date DATE NOT NULL,
    order_status_id INT NOT NULL,
    FOREIGN KEY (order_id) REFERENCES cust_order(order_id),
    FOREIGN KEY (order_status_id) REFERENCES order_status(order_status_id)
);

INSERT INTO order_history (order_id, status_change_date, order_status_id)
VALUES 
    (1, '2025-04-11', 2),
    (1, '2025-04-12', 3),
    (2, '2025-04-13', 1);
    
    CREATE TABLE order_status (
    order_status_id INT AUTO_INCREMENT PRIMARY KEY,
    status_name VARCHAR(50) NOT NULL
);

INSERT INTO order_status (status_name)
VALUES 
    ('Pending'),
    ('Shipped'),
    ('Delivered'),
    ('Cancelled');
    
   